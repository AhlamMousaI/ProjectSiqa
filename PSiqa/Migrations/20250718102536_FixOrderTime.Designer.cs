// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSiqa.Data;

#nullable disable

namespace PSiqa.Migrations
{
    [DbContext(typeof(SSDbContext))]
    [Migration("20250718102536_FixOrderTime")]
    partial class FixOrderTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PSiqa.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "المنطقة الشمالية"
                        },
                        new
                        {
                            Id = 2,
                            Name = "المنطقة الشرقية"
                        },
                        new
                        {
                            Id = 3,
                            Name = "المنطقة الغربية"
                        });
                });

            modelBuilder.Entity("PSiqa.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "شارع الملك - المنطقة الشمالية",
                            AreaId = 1,
                            FullName = "محمد أحمد",
                            Phone = "0512345678"
                        },
                        new
                        {
                            Id = 2,
                            Address = "شارع الجامعة - المنطقة الشرقية",
                            AreaId = 2,
                            FullName = "علي محمد",
                            Phone = "0598765432"
                        });
                });

            modelBuilder.Entity("PSiqa.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "سائق الشمال",
                            Phone = "0501111222"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "سائق الشرق",
                            Phone = "0503333444"
                        });
                });

            modelBuilder.Entity("PSiqa.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TankId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DriverId");

                    b.HasIndex("TankId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DriverId = 1,
                            OrderTime = new DateTime(2023, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 5,
                            Status = "تم",
                            TankId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            DriverId = 2,
                            OrderTime = new DateTime(2023, 1, 2, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 3,
                            Status = "جاري التسليم",
                            TankId = 2
                        });
                });

            modelBuilder.Entity("PSiqa.Models.Tank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TankName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WaterType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tanks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 10000,
                            Location = "موقع شمالي",
                            PricePerUnit = 2.5m,
                            TankName = "خزان الشمال الرئيسي",
                            WaterType = "شرب"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 8000,
                            Location = "موقع شرقي",
                            PricePerUnit = 1.8m,
                            TankName = "خزان الشرق الاحتياطي",
                            WaterType = "زراعي"
                        });
                });

            modelBuilder.Entity("PSiqa.Models.TankArea", b =>
                {
                    b.Property<int>("TankId")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("TankId", "AreaId");

                    b.HasIndex("AreaId");

                    b.ToTable("TankAreas");

                    b.HasData(
                        new
                        {
                            TankId = 1,
                            AreaId = 1,
                            Id = 1
                        },
                        new
                        {
                            TankId = 2,
                            AreaId = 2,
                            Id = 2
                        });
                });

            modelBuilder.Entity("PSiqa.Models.Customer", b =>
                {
                    b.HasOne("PSiqa.Models.Area", "Area")
                        .WithMany("Customers")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("PSiqa.Models.Order", b =>
                {
                    b.HasOne("PSiqa.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSiqa.Models.Driver", "Driver")
                        .WithMany("Orders")
                        .HasForeignKey("DriverId");

                    b.HasOne("PSiqa.Models.Tank", "Tank")
                        .WithMany("Orders")
                        .HasForeignKey("TankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Driver");

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("PSiqa.Models.TankArea", b =>
                {
                    b.HasOne("PSiqa.Models.Area", "Area")
                        .WithMany("TankAreas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSiqa.Models.Tank", "Tank")
                        .WithMany("TankAreas")
                        .HasForeignKey("TankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("PSiqa.Models.Area", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("TankAreas");
                });

            modelBuilder.Entity("PSiqa.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PSiqa.Models.Driver", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PSiqa.Models.Tank", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("TankAreas");
                });
#pragma warning restore 612, 618
        }
    }
}
